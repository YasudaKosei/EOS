/*はじめに*/
UnityにもともとあるPlayerPrefsは、簡単にデータを保存できる反面、
暗号化や保存できるデータ型などが限られています。
そのため暗号化等ができるセーブ方法を自分なりに説明したいと思います。
参考にしていただければ幸いです。



/*注意事項*/
データが消えたりしても一切の責任を負いません。
使用する際は自己責任でお願いします。
分からないことがあればDiscordのDMで直接聞いてくれれば、
できる限りのサポートはします。

※Unity上だとセーブデータの表示が遅れることがありますが、
　データはしっかり作られていますので、ご安心ください。



/*DebugSaveSystemSceneの使い方*/
1280 × 720 に解像度を変更してください。
ボタンを押すとランダムで値や文字が変化します。
変数のデータは常に画面に表示されます。
セーブファイルは３つ用意しています。増やすことも可能です。
Fileボタンを押すとそれぞれのFileが読み込まれます。
Saveボタンを押すと選択されているファイルに今のデータを保存します。
Saveボタンを押しゲームを終了してもう一度起動すると、
Saveボタンを押したときに保存されたデータがファイルごとに読み込まれます。
Deleteボタンを押すと選択されているファイルのデータが削除されます。
現在は削除のみで初期値は設定されていないため0やNULL、falseが変数に入ります。
設定したい方は/*DeleteSaveについて*/をお読みください。



/*ProjectにSaveSystemの導入方法*/
空のオブジェクトを1つ用意しDataManager.csとRead.cs、Save.csをアタッチしてください。
DataManager.csの中のSaveCllassとReadClassに今作成したオブジェクトをアタッチしてください。
インスペクターのReadとSaveのチェックマークを外しておいてください。
Assetsファイル内のDataManager.pngのようになっていれば大丈夫です。

ゲームを開始すると自動で保存データが読み込まれます。
勝手に読み込まれたくない場合はDataManager.csの中のvoid Start()を消してください。

データを読み込みたい場合はDataManager.csの中のRead()を呼び出してください。

データを保存したい場合はDataManager.csの中のSave()を呼び出してください。

データを削除したい場合はDataManager.csの中のDelete()を呼び出してください。

セーブフォルダを変更したい場合はDataManager.csの中のsaveFile変数を変更してください。

Scriptsフォルダの中にあるDebugフォルダは削除してもらって構いませんが、
削除するとDebugSaveSystemSceneは機能しなくなります。



/*SaveDataの保存場所*/
ビルド前とビルド後で保存場所が変わります。
ビルド前ならAssetファイル内のSaveファイルの中にあります。
ビルド後なら.exeフォルダがあるところにゲーム起動後Saveファイルが作られ、その中に保存されます。
これによりゲームを別のPCに移してもデータが反映されるようになりました。

SaveData1なら
save1.bytes

SaveData2なら
save2.bytes

のように保存されます。

※Unity上だとセーブデータの表示が遅れることがありますが、
　データはしっかり作られていますので、ご安心ください。



/*SaveData.csについて*/
セーブデータを入れるデータです。
[System.Serializable]を付けて、publicで変数を設定してください。
変数名はGameData.csの変数名と同じにすることをお勧めします。

例：public int playerHp;



/*GameData.csについて*/
ゲーム内で常に持っておきたいデータです。
staticにしておくと参照するときに便利かと思います。
staticを使わなくても別の方法でもできます。
変数名はSaveData.csの変数名と同じにすることをお勧めします。

例：public static int playerHp = 10;



/*Save.csについて*/
データを保存するスクリプトです。
76行目から79行目の部分を保存したい変数名に変更してください。
また、90行目と91行目の部分の aesIV と aesKey は暗号化する際の
パスワードみたいなものです。
変更は自由ですが、
必ずRead.csの中にある aesIV と aesKey を同じにしてください。
aesIV と aesKey は同じにしなくても構いません。

例：string aesIv = "0987654321098765";
    string aesKey = "1234567890123456";



/*Read.csについて*/
データを読み込むスクリプトです。
80行目から83行目の部分を保存したい変数名に変更してください。
また、91行目と92行目の部分の aesIV と aesKey は複合化する際の
パスワードみたいなものです。
変更は自由ですが、
必ずSave.csの中にある aesIV と aesKey を同じにしてください。
aesIV と aesKey は同じにしなくても構いません。

例：string aesIv = "0987654321098765";
    string aesKey = "1234567890123456";



/*DataManagerについて*/
データをセーブしたり読み込んだりします。
Read();でデータを読み込み、Save();でデータを保存します。
Delete();でデータを削除し、File();でセーブフォルダを変更します。
開始時にに読み込まれたくない場合はStart()の中身を変えてください。



/*更新履歴*/
v1.0.0 暗号化のセーブと複合化のロードを追加

v1.1.0 データ削除を追加

v1.2.0 セーブファイルを複数作る機能を追加

v1.3.0 セーブデータの保存場所を変更

v1.3.1 コメント文を追加

v1.4.0 文字コード変更



/*参考サイト*/
https://qiita.com/InfiniteGame/items/01da9d83853fecb95132
https://unitygame.slavesystems.com/unity/?p=13
https://gametukurikata.com/csharp/makefolderfile